% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/perturbCorr.R
\name{perturbCorr}
\alias{perturbCorr}
\alias{evalCorr}
\title{Perturb networks and evaluate subgroup structures of correlation matrices.}
\usage{
perturbCorr(sym.matrix, plot = TRUE, sampleSize = NULL, n = NULL,
  tol = 0.001, stepSize = 0.001, verbose = FALSE)
}
\arguments{
\item{sym.matrix}{A symmetric, correlation or covariance matrix object}

\item{plot}{Logical, defaults to TRUE}

\item{sampleSize}{The sample size for a correlation matrix, lower values for more sampling error}

\item{n}{Number of random correlations matrices to return}

\item{tol}{Tolerance for configuration model convergence. Default to .0001}

\item{stepSize}{Step size for configuration model NR solver. Increase to increase convergence speed. Default to .001}

\item{verbose}{Logical, Print convergence information to screen.  Defaults to FALSE.}
}
\description{
This function implements the Masuda, Kojaku & Sano (2018) "Configuration model for correlation matrices preserving the node strength" algorithm for 
generating correlation matrices that have the same strength distribution as the original matrix.  Returns modularity of each randomized correlation matrix.
}
\examples{
perturbCorr(examplecorr, sampleSize=100, n=25, plot=FALSE)
}
